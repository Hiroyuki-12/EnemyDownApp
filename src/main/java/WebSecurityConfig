@Configuration
 @EnableWebSecurity
 public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
 // 認証認可の設定を記述する

 public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
    @Override
    protected void configure(HttpSecurity http) throws Exception {
     http
     .authorizeRequests()
     .antMatchers("/", "/home").permitAll() // /と/homeはログインしないでも表⽰可能
     .anyRequest().authenticated() // ほかは認証が必要
     .and()
     .formLogin()
     .loginPage("/login") // /loginがログインページのパス
     .permitAll()
     .and()
     .logout()
     .permitAll();
  }
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    @Override
    public UserDetailsService userDetailsService() {
        UserDetails user = User.builder()
            .username("user")
            .password(passwordEncoder().encode("password")) // エンコードされたパスワード
            .roles("USER")
            .build();
        return new InMemoryUserDetailsManager(user);
    }
 }